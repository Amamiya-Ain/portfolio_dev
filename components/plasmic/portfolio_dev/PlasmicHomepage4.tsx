/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 28mkbvcnJxn1WuXGx7J8H7
// Component: D36Ia7fXaKG1

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/projectcss
import sty from "./PlasmicHomepage4.module.css"; // plasmic-import: D36Ia7fXaKG1/css

createPlasmicElementProxy;

export type PlasmicHomepage4__VariantMembers = {};
export type PlasmicHomepage4__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage4__VariantsArgs;
export const PlasmicHomepage4__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage4__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage4__ArgsType;
export const PlasmicHomepage4__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage4__OverridesType = {
  achievements?: Flex__<"div">;
  home2?: Flex__<"section">;
  h1?: Flex__<"h1">;
  text?: Flex__<"div">;
};

export interface DefaultHomepage4Props {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage4__RenderFunc(props: {
  variants: PlasmicHomepage4__VariantsArgs;
  args: PlasmicHomepage4__ArgsType;
  overrides: PlasmicHomepage4__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"achievements"}
          data-plasmic-override={overrides.achievements}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.achievements
          )}
        >
          <section
            data-plasmic-name={"home2"}
            data-plasmic-override={overrides.home2}
            className={classNames(projectcss.all, sty.home2)}
          >
            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              {"Achievements"}
            </h1>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"\u8cc7\u683c\u30fb\u8a66\u9a13"}
                </span>
                <React.Fragment>
                  {
                    "\n\u30fbIT\u30d1\u30b9\u30dd\u30fc\u30c8\uff08\u5927\u5b66\u5165\u5b66\u4ee5\u524d\u306b\u53d6\u5f97\uff09\n\u30fb\u57fa\u672c\u60c5\u5831\u6280\u8853\u8005\uff08\u5b66\u90e82\u5e74\u6b21\u306b\u53d6\u5f97\uff09\n\u30fb\u5fdc\u7528\u60c5\u5831\u6280\u8853\u8005\uff08\u5b66\u90e82\u5e74\u6b21\u306b\u53d6\u5f97\uff09\n\u30fbPAST\uff08\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5b9f\u6280\u691c\u5b9a\uff09\u4e2d\u7d1a\uff08\u4fee\u58eb1\u5e74\u6b21\u306b\u53d6\u5f97\uff09\n\u30fb\u60c5\u5831\u51e6\u7406\u5b89\u5168\u78ba\u4fdd\u652f\u63f4\u58eb \u8a66\u9a13\u4e88\u5b9a\uff082025\u5e7410\u6708\u53d7\u9a13\uff09\n\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"}
                </span>
                <React.Fragment>
                  {
                    "\n\u30fbAtCoder \u7dd1\uff08Algorithm / Heuristic\uff09\n\u3000- \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5b9f\u88c5\u3068\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u5206\u91ce\u3067\u5b89\u5b9a\u3057\u305f\u6210\u7e3e\u3092\u7d99\u7d9a\u3002\n\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"\u53d7\u8cde\u6b74"}
                </span>
                <React.Fragment>
                  {
                    "\n\u30fb1Week\u30aa\u30f3\u30e9\u30a4\u30f3\u30cf\u30c3\u30ab\u30bd\u30f3\u300cFlush Code Hack\u300d\uff082025\u5e749\u6708\uff09\n\u3000- \u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u5bfe\u6226\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a2d\u8a08\u30fb\u5b9f\u88c5\u3059\u308b\u30c8\u30fc\u30ca\u30e1\u30f3\u30c8\u5f62\u5f0f\u306e\u30cf\u30c3\u30ab\u30bd\u30f3\u306b\u53c2\u52a0\u3002\n\u3000- \u30dd\u30fc\u30ab\u30fcAI\u306e\u6226\u7565\u8a2d\u8a08\u3068\u30b3\u30fc\u30c9\u7d71\u5408\u3092\u4e3b\u5c0e\u3057\u30014\u30c1\u30fc\u30e0\u4e2d2\u4f4d\uff0b\u30aa\u30fc\u30c7\u30a3\u30a8\u30f3\u30b9\u8cde\u3092\u7372\u5f97\u3002"
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox___1UDhu)}>
            <div className={classNames(projectcss.all, sty.freeBox__hRUo)}>
              <div className={classNames(projectcss.all, sty.freeBox__pn9P3)}>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___1WcCx
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage2"] = true
                      ? (() => {
                          const actionArgs = { destination: `/About` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage2"] != null &&
                      typeof $steps["goToHomepage2"] === "object" &&
                      typeof $steps["goToHomepage2"].then === "function"
                    ) {
                      $steps["goToHomepage2"] = await $steps["goToHomepage2"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"About"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__xdlk
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage3"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Projects` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage3"] != null &&
                      typeof $steps["goToHomepage3"] === "object" &&
                      typeof $steps["goToHomepage3"].then === "function"
                    ) {
                      $steps["goToHomepage3"] = await $steps["goToHomepage3"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Projects"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___5OBOr
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage4"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Achievements` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage4"] != null &&
                      typeof $steps["goToHomepage4"] === "object" &&
                      typeof $steps["goToHomepage4"].then === "function"
                    ) {
                      $steps["goToHomepage4"] = await $steps["goToHomepage4"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Achievements"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__l6Gs
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage5"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Blog` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage5"] != null &&
                      typeof $steps["goToHomepage5"] === "object" &&
                      typeof $steps["goToHomepage5"].then === "function"
                    ) {
                      $steps["goToHomepage5"] = await $steps["goToHomepage5"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Blog"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__tg3Uj
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage"] = true
                      ? (() => {
                          const actionArgs = { destination: `/` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage"] != null &&
                      typeof $steps["goToHomepage"] === "object" &&
                      typeof $steps["goToHomepage"].then === "function"
                    ) {
                      $steps["goToHomepage"] = await $steps["goToHomepage"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"TOP"}
                </PlasmicLink__>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  achievements: ["achievements", "home2", "h1", "text"],
  home2: ["home2", "h1", "text"],
  h1: ["h1"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  achievements: "div";
  home2: "section";
  h1: "h1";
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage4__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage4__VariantsArgs;
    args?: PlasmicHomepage4__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage4__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage4__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage4__ArgProps,
          internalVariantPropNames: PlasmicHomepage4__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage4__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "achievements") {
    func.displayName = "PlasmicHomepage4";
  } else {
    func.displayName = `PlasmicHomepage4.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage4 = Object.assign(
  // Top-level PlasmicHomepage4 renders the root element
  makeNodeComponent("achievements"),
  {
    // Helper components rendering sub-elements
    home2: makeNodeComponent("home2"),
    h1: makeNodeComponent("h1"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicHomepage4
    internalVariantProps: PlasmicHomepage4__VariantProps,
    internalArgProps: PlasmicHomepage4__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage4;
/* prettier-ignore-end */
