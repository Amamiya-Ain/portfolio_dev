/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 28mkbvcnJxn1WuXGx7J8H7
// Component: GuVQg8yotzBa

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/projectcss
import sty from "./PlasmicHomepage3.module.css"; // plasmic-import: GuVQg8yotzBa/css

createPlasmicElementProxy;

export type PlasmicHomepage3__VariantMembers = {};
export type PlasmicHomepage3__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage3__VariantsArgs;
export const PlasmicHomepage3__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage3__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage3__ArgsType;
export const PlasmicHomepage3__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage3__OverridesType = {
  projects?: Flex__<"div">;
  home2?: Flex__<"section">;
  h1?: Flex__<"h1">;
  text?: Flex__<"div">;
};

export interface DefaultHomepage3Props {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage3__RenderFunc(props: {
  variants: PlasmicHomepage3__VariantsArgs;
  args: PlasmicHomepage3__ArgsType;
  overrides: PlasmicHomepage3__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"projects"}
          data-plasmic-override={overrides.projects}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.projects
          )}
        >
          <section
            data-plasmic-name={"home2"}
            data-plasmic-override={overrides.home2}
            className={classNames(projectcss.all, sty.home2)}
          >
            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              {"Projects"}
            </h1>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"\u30bf\u30a4\u30c8\u30eb\uff1aProject V"}
                </span>
                <React.Fragment>
                  {
                    "\r\n\u671f\u9593\uff1a2024\u5e74\u301c2025\u5e74\r\n\u4f7f\u7528\u6280\u8853\uff1aGameMaker Studio, GML\r\n\u6982\u8981\uff1a\u500b\u4eba\u3067\u4f01\u753b\u30fb\u958b\u767a\u3057\u305f2D\u30a2\u30af\u30b7\u30e7\u30f3\u30b2\u30fc\u30e0\u3002\r\n\u30dd\u30a4\u30f3\u30c8\uff1a\u30b2\u30fc\u30e0\u30c7\u30b6\u30a4\u30f3\u30fbUI\u8a2d\u8a08\u30fb\u5b9f\u88c5\u3092\u4e00\u8cab\u3057\u3066\u62c5\u5f53\u3002\u64cd\u4f5c\u611f\u3084\u30b9\u30c6\u30fc\u30b8\u69cb\u6210\u306e\u6539\u5584\u3092\u91cd\u306d\u3001\u904a\u3073\u3084\u3059\u3055\u3092\u8ffd\u6c42\u3002\r\n\u6210\u679c\uff1a\u30d7\u30ec\u30a4\u52d5\u753b\u3092\u516c\u958b\u4e88\u5b9a\u3002\r\n\u30ea\u30f3\u30af\uff1a\n\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {
                    "\u30bf\u30a4\u30c8\u30eb\uff1a\u500b\u4eba\u30dd\u30fc\u30c8\u30d5\u30a9\u30ea\u30aa\u30b5\u30a4\u30c8"
                  }
                </span>
                <React.Fragment>
                  {
                    "\r\n\u671f\u9593\uff1a2025\u5e749\u6708\u301c\r\n\u4f7f\u7528\u6280\u8853\uff1aTypeScript, React, Next.js, Plasmic\r\n\u6982\u8981\uff1a\u5c31\u6d3b\u7528\u306e\u30dd\u30fc\u30c8\u30d5\u30a9\u30ea\u30aa\u30b5\u30a4\u30c8\u3092GUI\u30c4\u30fc\u30eb\uff08Plasmic\uff09\u3068Next.js\u3067\u69cb\u7bc9\u3002\r\n\u30dd\u30a4\u30f3\u30c8\uff1a\u9759\u7684\u751f\u6210\u30fb\u30c7\u30b6\u30a4\u30f3\u7ba1\u7406\u3092\u5b66\u3073\u3001GUI\u7de8\u96c6\u3068\u30b3\u30fc\u30c9\u7ba1\u7406\u3092\u4e21\u7acb\u3002\r\n\u6210\u679c\uff1a\u5c31\u8077\u6d3b\u52d5\u306e\u81ea\u5df1PR\u7528\u30b5\u30a4\u30c8\u3068\u3057\u3066\u904b\u7528\u4e2d\u3002\r\n\u30ea\u30f3\u30af\uff1ahttps://portfolio-es6deddmv-amamiya-ains-projects.vercel.app/"
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox__qfEsc)}>
            <div className={classNames(projectcss.all, sty.freeBox__ck1JR)}>
              <div className={classNames(projectcss.all, sty.freeBox___8ABgX)}>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__nVkT
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage2"] = true
                      ? (() => {
                          const actionArgs = { destination: `/About` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage2"] != null &&
                      typeof $steps["goToHomepage2"] === "object" &&
                      typeof $steps["goToHomepage2"].then === "function"
                    ) {
                      $steps["goToHomepage2"] = await $steps["goToHomepage2"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"About"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__ooCwj
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage3"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Projects` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage3"] != null &&
                      typeof $steps["goToHomepage3"] === "object" &&
                      typeof $steps["goToHomepage3"].then === "function"
                    ) {
                      $steps["goToHomepage3"] = await $steps["goToHomepage3"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Projects"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__gmWp7
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage4"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Achievements` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage4"] != null &&
                      typeof $steps["goToHomepage4"] === "object" &&
                      typeof $steps["goToHomepage4"].then === "function"
                    ) {
                      $steps["goToHomepage4"] = await $steps["goToHomepage4"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Achievements"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___7WMI
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage5"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Blog` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage5"] != null &&
                      typeof $steps["goToHomepage5"] === "object" &&
                      typeof $steps["goToHomepage5"].then === "function"
                    ) {
                      $steps["goToHomepage5"] = await $steps["goToHomepage5"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Blog"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__w6IIq
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage"] = true
                      ? (() => {
                          const actionArgs = { destination: `/` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage"] != null &&
                      typeof $steps["goToHomepage"] === "object" &&
                      typeof $steps["goToHomepage"].then === "function"
                    ) {
                      $steps["goToHomepage"] = await $steps["goToHomepage"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"TOP"}
                </PlasmicLink__>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  projects: ["projects", "home2", "h1", "text"],
  home2: ["home2", "h1", "text"],
  h1: ["h1"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  projects: "div";
  home2: "section";
  h1: "h1";
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage3__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage3__VariantsArgs;
    args?: PlasmicHomepage3__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage3__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage3__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage3__ArgProps,
          internalVariantPropNames: PlasmicHomepage3__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage3__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "projects") {
    func.displayName = "PlasmicHomepage3";
  } else {
    func.displayName = `PlasmicHomepage3.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage3 = Object.assign(
  // Top-level PlasmicHomepage3 renders the root element
  makeNodeComponent("projects"),
  {
    // Helper components rendering sub-elements
    home2: makeNodeComponent("home2"),
    h1: makeNodeComponent("h1"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicHomepage3
    internalVariantProps: PlasmicHomepage3__VariantProps,
    internalArgProps: PlasmicHomepage3__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage3;
/* prettier-ignore-end */
