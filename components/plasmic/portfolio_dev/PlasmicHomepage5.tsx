/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 28mkbvcnJxn1WuXGx7J8H7
// Component: np4QhfVPnnRg

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 28mkbvcnJxn1WuXGx7J8H7/projectcss
import sty from "./PlasmicHomepage5.module.css"; // plasmic-import: np4QhfVPnnRg/css

createPlasmicElementProxy;

export type PlasmicHomepage5__VariantMembers = {};
export type PlasmicHomepage5__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage5__VariantsArgs;
export const PlasmicHomepage5__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage5__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage5__ArgsType;
export const PlasmicHomepage5__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage5__OverridesType = {
  blog?: Flex__<"div">;
  home2?: Flex__<"section">;
  h1?: Flex__<"h1">;
  text?: Flex__<"div">;
};

export interface DefaultHomepage5Props {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage5__RenderFunc(props: {
  variants: PlasmicHomepage5__VariantsArgs;
  args: PlasmicHomepage5__ArgsType;
  overrides: PlasmicHomepage5__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"blog"}
          data-plasmic-override={overrides.blog}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.blog
          )}
        >
          <section
            data-plasmic-name={"home2"}
            data-plasmic-override={overrides.home2}
            className={classNames(projectcss.all, sty.home2)}
          >
            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              {"Blog"}
            </h1>
            <div
              data-plasmic-name={"text"}
              data-plasmic-override={overrides.text}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"# Flush Code Hack \u53c2\u52a0\u30ec\u30dd\u30fc\u30c8"}
                </span>
                <React.Fragment>
                  {
                    "\r\n\r\n\u6295\u7a3f\u65e5\uff1a2025-09-30  \r\n\u30ab\u30c6\u30b4\u30ea\uff1a#\u30cf\u30c3\u30ab\u30bd\u30f3 #TypeScript #AI #\u30c1\u30fc\u30e0\u958b\u767a\r\n\r\n---\r\n\r\n## \u6982\u8981\r\n2025\u5e749\u6708\u306b\u958b\u50ac\u3055\u308c\u305f 1Week \u30aa\u30f3\u30e9\u30a4\u30f3\u30cf\u30c3\u30ab\u30bd\u30f3 **\u300cFlush Code Hack\u300d** \u306b\u53c2\u52a0\u3057\u3001\u30dd\u30fc\u30ab\u30fcAI\u306e\u958b\u767a\u3092\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002  \r\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u958b\u767a\u306e\u6d41\u308c\u3084\u5f97\u3089\u308c\u305f\u5b66\u3073\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\r\n\r\n---\r\n\r\n## \u80cc\u666f\r\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5b9f\u88c5\u306e\u7d4c\u9a13\u3092\u6d3b\u304b\u3057\u3001\u77ed\u671f\u9593\u3067\u5b9f\u7528\u7684\u306aAI\u3092\u69cb\u7bc9\u3059\u308b\u6311\u6226\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u8003\u3048\u3001\u53c2\u52a0\u3092\u6c7a\u3081\u307e\u3057\u305f\u3002  \r\n\u30c6\u30fc\u30de\u306f\u300c\u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u5bfe\u6226\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3057\u3001\u30c8\u30fc\u30ca\u30e1\u30f3\u30c8\u5f62\u5f0f\u3067\u7af6\u3046\u300d\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\r\n\r\n---\r\n\r\n## \u958b\u767a\u5185\u5bb9\r\n- **\u5f79\u3054\u3068\u306e\u4ea4\u63db\u6226\u7565**\u3068**\u30dd\u30c3\u30c8\u30aa\u30c3\u30ba**\u3001\u72b6\u6cc1\u306b\u5fdc\u3058\u305f\u88dc\u6b63\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u5805\u5b9f\u306a\u30d9\u30c3\u30c8\u6226\u7565\u3092\u8a2d\u8a08\u3002  \r\n- TypeScript \u3092\u7528\u3044\u3066 AI \u3092\u5b9f\u88c5\u3057\u3001\u30ed\u30b0\u3092\u6d3b\u7528\u3057\u305f\u30c7\u30d0\u30c3\u30b0\u30fb\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u65bd\u3002  \r\n- \u30c1\u30fc\u30e0\u306e\u30b3\u30fc\u30c9\u7d71\u5408\u3092\u62c5\u5f53\u3057\u3001\u9032\u6357\u5171\u6709\u3084\u30bf\u30b9\u30af\u5206\u5272\u3092\u30ea\u30fc\u30c9\u3002\r\n\r\n---\r\n\r\n## \u6210\u679c\r\n- **4\u30c1\u30fc\u30e0\u4e2d 2\u4f4d\uff0b\u30aa\u30fc\u30c7\u30a3\u30a8\u30f3\u30b9\u8cde\u3092\u7372\u5f97**\u3002  \r\n- AI \u304c\u5b89\u5b9a\u3057\u305f\u52dd\u7387\u3092\u767a\u63ee\u3057\u3001\u30c1\u30fc\u30e0\u5168\u4f53\u306e\u6226\u7565\u304c\u5f62\u306b\u306a\u3063\u305f\u3002  \r\n- \u751f\u6210AI\u3092\u6d3b\u7528\u3057\u305f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u88dc\u52a9\u3084\u77ed\u671f\u9593\u3067\u306e\u4ed5\u69d8\u5909\u66f4\u5bfe\u5fdc\u3092\u4f53\u9a13\u3002\r\n\r\n---\r\n\r\n## \u5b66\u3073\r\n- **\u77ed\u671f\u9593\u958b\u767a\u3067\u306f\u5f79\u5272\u5206\u62c5\u3068\u9032\u6357\u5171\u6709\u304c\u91cd\u8981**  \r\n  - \u5f53\u521d\u306f\u540c\u6642\u4e26\u884c\u3067\u6df7\u4e71\u3057\u305f\u304c\u3001\u65e9\u671f\u306b\u30bf\u30b9\u30af\u3092\u5206\u3051\u308b\u3053\u3068\u3067\u7d71\u5408\u304c\u30b9\u30e0\u30fc\u30ba\u306b\u3002  \r\n- **\u751f\u6210AI\u306e\u6d3b\u7528\u3067\u958b\u767a\u30b9\u30d4\u30fc\u30c9\u3092\u52a0\u901f\u3067\u304d\u308b**  \r\n  - \u30b3\u30fc\u30c9\u751f\u6210\u3084\u30c7\u30d0\u30c3\u30b0\u88dc\u52a9\u3068\u3057\u3066\u6709\u7528\u3060\u3068\u5b9f\u611f\u3002  \r\n- **\u30c7\u30fc\u30bf\u3068\u8ad6\u7406\u306b\u57fa\u3065\u304f\u6226\u7565\u8a2d\u8a08\u306e\u697d\u3057\u3055**  \r\n  - \u30ae\u30e3\u30f3\u30d6\u30eb\u8981\u7d20\u306e\u5f37\u3044\u30b2\u30fc\u30e0\u3067\u3082\u3001\u7406\u8ad6\u7684\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u52dd\u7387\u3092\u4e0a\u3052\u3089\u308c\u308b\u3053\u3068\u3092\u4f53\u611f\u3002\r\n\r\n---\r\n\r\n## \u307e\u3068\u3081\r\n\u521d\u3081\u3066\u306e 1Week \u30cf\u30c3\u30ab\u30bd\u30f3\u3067\u3001\u77ed\u671f\u9593\u3067\u3082\u30a2\u30a4\u30c7\u30a2\u3092\u5f62\u306b\u3067\u304d\u308b\u697d\u3057\u3055\u3068\u3001\u30c1\u30fc\u30e0\u958b\u767a\u306e\u96e3\u3057\u3055\u3092\u5b9f\u611f\u3057\u307e\u3057\u305f\u3002  \r\n\u4eca\u5f8c\u306f\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u8a2d\u8a08\u3068\u52b9\u7387\u7684\u306a\u30c1\u30fc\u30e0\u958b\u767a\u306e\u9032\u3081\u65b9\u3092\u78e8\u3044\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\r\n"
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox___2GsUi)}>
            <div className={classNames(projectcss.all, sty.freeBox__uzdKs)}>
              <div className={classNames(projectcss.all, sty.freeBox___09Yh6)}>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__hcSxb
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage2"] = true
                      ? (() => {
                          const actionArgs = { destination: `/About` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage2"] != null &&
                      typeof $steps["goToHomepage2"] === "object" &&
                      typeof $steps["goToHomepage2"].then === "function"
                    ) {
                      $steps["goToHomepage2"] = await $steps["goToHomepage2"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"About"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___3Sa45
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage3"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Projects` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage3"] != null &&
                      typeof $steps["goToHomepage3"] === "object" &&
                      typeof $steps["goToHomepage3"].then === "function"
                    ) {
                      $steps["goToHomepage3"] = await $steps["goToHomepage3"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Projects"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__iw4Wb
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage4"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Achievements` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage4"] != null &&
                      typeof $steps["goToHomepage4"] === "object" &&
                      typeof $steps["goToHomepage4"].then === "function"
                    ) {
                      $steps["goToHomepage4"] = await $steps["goToHomepage4"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Achievements"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__aMri
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage5"] = true
                      ? (() => {
                          const actionArgs = { destination: `/Blog` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage5"] != null &&
                      typeof $steps["goToHomepage5"] === "object" &&
                      typeof $steps["goToHomepage5"].then === "function"
                    ) {
                      $steps["goToHomepage5"] = await $steps["goToHomepage5"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"Blog"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__qgjbp
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHomepage"] = true
                      ? (() => {
                          const actionArgs = { destination: `/` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage"] != null &&
                      typeof $steps["goToHomepage"] === "object" &&
                      typeof $steps["goToHomepage"].then === "function"
                    ) {
                      $steps["goToHomepage"] = await $steps["goToHomepage"];
                    }
                  }}
                  platform={"nextjs"}
                >
                  {"TOP"}
                </PlasmicLink__>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  blog: ["blog", "home2", "h1", "text"],
  home2: ["home2", "h1", "text"],
  h1: ["h1"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  blog: "div";
  home2: "section";
  h1: "h1";
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage5__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage5__VariantsArgs;
    args?: PlasmicHomepage5__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage5__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage5__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage5__ArgProps,
          internalVariantPropNames: PlasmicHomepage5__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage5__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "blog") {
    func.displayName = "PlasmicHomepage5";
  } else {
    func.displayName = `PlasmicHomepage5.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage5 = Object.assign(
  // Top-level PlasmicHomepage5 renders the root element
  makeNodeComponent("blog"),
  {
    // Helper components rendering sub-elements
    home2: makeNodeComponent("home2"),
    h1: makeNodeComponent("h1"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicHomepage5
    internalVariantProps: PlasmicHomepage5__VariantProps,
    internalArgProps: PlasmicHomepage5__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage5;
/* prettier-ignore-end */
